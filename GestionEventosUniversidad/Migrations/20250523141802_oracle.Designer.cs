// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace GestionEventosUniversidad.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250523141802_oracle")]
    partial class oracle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Certificado", b =>
                {
                    b.Property<int>("CertificadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificadoId"));

                    b.Property<string>("CodigoCertificado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CumpleRequisitos")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PonenteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("CertificadoId");

                    b.HasIndex("EventoId");

                    b.HasIndex("InscripcionId");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("PonenteId");

                    b.ToTable("Certificado");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.EventosUniversidad", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("IDUsuarioCreador")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("IdEvento");

                    b.HasIndex("IDUsuarioCreador");

                    b.ToTable("EventosUniversidad");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Inscripcion", b =>
                {
                    b.Property<int>("InscripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InscripcionId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("PagoRealizado")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PonenteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("InscripcionId");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("PonenteId");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Pagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Monto")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionId")
                        .IsUnique();

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Participante", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipanteId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ParticipanteId");

                    b.ToTable("Participante");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.ParticipanteEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("ParticipanteEventos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Ponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Ponente");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.PonenteEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PonenteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("PonenteId");

                    b.ToTable("PonenteEventos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.SesionesEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("FechaHoraFin")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("SesionesEventos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.UsuarioCreadorEventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("UsuarioCreadorEventos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Certificado", b =>
                {
                    b.HasOne("GestionEventosUniversidad.Entidades.EventosUniversidad", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosUniversidad.Entidades.Inscripcion", "Inscripcion")
                        .WithMany()
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosUniversidad.Entidades.Participante", "Participante")
                        .WithMany("Certificados")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosUniversidad.Entidades.Ponente", "Ponente")
                        .WithMany("Certificados")
                        .HasForeignKey("PonenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Inscripcion");

                    b.Navigation("Participante");

                    b.Navigation("Ponente");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.EventosUniversidad", b =>
                {
                    b.HasOne("GestionEventosUniversidad.Entidades.UsuarioCreadorEventos", "UsuarioCreadorEventos")
                        .WithMany("Eventos")
                        .HasForeignKey("IDUsuarioCreador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioCreadorEventos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Inscripcion", b =>
                {
                    b.HasOne("GestionEventosUniversidad.Entidades.EventosUniversidad", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosUniversidad.Entidades.Participante", "Participante")
                        .WithMany()
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosUniversidad.Entidades.Ponente", "Ponente")
                        .WithMany()
                        .HasForeignKey("PonenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");

                    b.Navigation("Ponente");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Pagos", b =>
                {
                    b.HasOne("GestionEventosUniversidad.Entidades.Inscripcion", "Inscripcion")
                        .WithOne("Pagos")
                        .HasForeignKey("GestionEventosUniversidad.Entidades.Pagos", "InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.ParticipanteEventos", b =>
                {
                    b.HasOne("GestionEventosUniversidad.Entidades.EventosUniversidad", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosUniversidad.Entidades.Participante", "Participante")
                        .WithMany("Eventos")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.PonenteEventos", b =>
                {
                    b.HasOne("GestionEventosUniversidad.Entidades.EventosUniversidad", "Evento")
                        .WithMany("Ponentes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosUniversidad.Entidades.Ponente", "Ponente")
                        .WithMany("Sesiones")
                        .HasForeignKey("PonenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Ponente");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.SesionesEventos", b =>
                {
                    b.HasOne("GestionEventosUniversidad.Entidades.EventosUniversidad", "Evento")
                        .WithMany("Sesiones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.EventosUniversidad", b =>
                {
                    b.Navigation("Participantes");

                    b.Navigation("Ponentes");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Inscripcion", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Participante", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.Ponente", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("GestionEventosUniversidad.Entidades.UsuarioCreadorEventos", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
